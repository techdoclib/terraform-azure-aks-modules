# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
  - stage: TerraformValidate
    jobs:
      - job: TerraformValidateJob
        continueOnError: false
        steps:
          - task: PublishPipelineArtifact@1
            displayName: Publish Artifacts
            inputs:
              targetPath: '$(System.DefaultWorkingDirectory)'
              artifact: 'terraform-source-code'
              publishLocation: 'pipeline'
          - task: TerraformInstaller@2
            displayName: Terraform Install 
            inputs:
              terraformVersion: 'latest'
          - task: TerraformCLI@2
            displayName: Terraform init
            inputs:
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)'
              backendType: 'azurerm'
              backendServiceArm: 'tf-aks-devops-svc-con'
              backendAzureRmResourceGroupName: 'terraform-storage-rg'
              backendAzureRmStorageAccountName: 'terraformstateinfolines'
              backendAzureRmContainerName: 'tfstatefiles'
              backendAzureRmKey: 'aks-base.tfstate'
              allowTelemetryCollection: false
          - task: TerraformCLI@2
            inputs:
              command: 'validate'
              workingDirectory: '$(System.DefaultWorkingDirectory)'
              allowTelemetryCollection: false
  